# docker-compose.yml
version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/accountingmax
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_SALT=${ENCRYPTION_SALT}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - STABULUM_RPC_URL=${STABULUM_RPC_URL}
      - STABULUM_CONTRACT_ADDRESS=${STABULUM_CONTRACT_ADDRESS}
      - STABULUM_API_KEY=${STABULUM_API_KEY}
      - STABULUM_API_URL=${STABULUM_API_URL}
    volumes:
      - ./logs:/usr/src/app/logs
    restart: unless-stopped
    networks:
      - app-network

  mongo:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
    depends_on:
      - mongo
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
